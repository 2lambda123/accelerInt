import os

Import('env')
Import('platform')


def getPlatformObject(env, platform):
    """
    Return the correct SCons object type from the given environment and platform
    """

    if platform == 'cpu':
        return env.SharedObject
    elif platform == 'cuda':
        return env.CUDAObject
    else:
        raise NotImplementedError


def get_files(path):
    return env.Glob(os.path.join(path, '*.cpp')) + env.Glob(os.path.join(
        path, '*.c'))


# get platform path
base = os.path.abspath('.')
path = os.path.join(base, platform)
# get source
src = get_files(path)
obj = getPlatformObject(env, platform)

if 'extra_dirs' in env:
    for d in env['extra_dirs']:
        path = os.path.join(base, d)
        src += get_files(path)

obj = [obj(file, variant_dir=env['variant']) for file in src]
Return('obj')
