Import('env')
cObj = []
c_src = Glob('*.c')

name_mod = env['CPPDEFINES'][0].lower()
for src in c_src:
	name = str(src)
	stub = name[:name.index('.c')]
	targ = stub + '_' + name_mod + '.o'
	cObj.append(env.Object(target=targ, source=src, variant_dir=env['variant']))

cudaObj = []
cuda_src = Glob('*.cu')

for src in cuda_src:
	name = str(src)
	stub = name[:name.index('.cu')]
	targ = stub + '_' + name_mod + '.cu.o'
	cudaObj.append(env.CUDAObject(src, target=targ, variant_dir=env['variant']))

def add_c_obj(src, cudaObj):
	obj = src.replace('.c', '_{}.cu.o'.format(name_mod))
	cudaObj.append(env.CUDAObject(
					target=obj,
					src=src,
					variant_dir=env['variant']))
add_c_obj('cf.c', cudaObj)
add_c_obj('linear-algebra.c', cudaObj)

Return ('cObj', 'cudaObj')